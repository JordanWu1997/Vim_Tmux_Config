# ~/.tmux.conf
# vim: syntax=tmux ft=tmux ff=unix
# ============================================================================
# TMUX configuration information and note
# ============================================================================
# TMUX configuration information and note

# TMUX version 3.1

# First time usage
# -- Install tmux plugin manager (tpm)
#    -- git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# -- Load tmux configuration
#    -- In tmux, source-file .tmux.conf

# TMUX configuration tool
# -- Show all TMUX key, in terminal
#    -- tmux list-keys
# -- Show all TMUX option, in terminal
#    -- tmux show [flag]
#       -- -g: Show all global options (including plugins)
#       -- -p/-w/-s: Show pane/window/session options
# -- Set environment variable (g for global)
#    -- tmux set-environment -g <VARIABLE>=<VALUE>
# -- Restore default value (g for global)
#    -- tmux set-environment -gu <VARIABLE>

# Reference
# -- https://github.com/rothgar/awesome-tmux
# -- https://arcolinux.com/everything-you-need-to-know-about-tmux-status-bar/
# -- https://b9532026.wordpress.com/2020/12/01/%E5%BC%B7%E5%8C%96tmux%E6%93%8D%E4%BD%9C/
# -- https://github.com/tmux-plugins/tmux-prefix-highlight
# -- https://tao-of-tmux.readthedocs.io/zh_CN/latest/manuscript/09-status-bar.html
# -- https://gist.github.com/markandrewj/ead05ebc20f3968ec07e
# -- https://github.com/tmux-plugins/tpm
# -- https://github.com/powerline/powerline
# -- https://github.com/erikw/tmux-powerline
# -- https://github.com/tmux-plugins/tmux-resurrect
# -- https://github.com/tmux-plugins/tmux-sidebar
# -- https://github.com/tmux-plugins/tmux-yank
# -- https://github.com/g6ai/dotfiles/tree/master/tmux
# -- https://danielmiessler.com/study/tmux/
# -- https://leimao.github.io/blog/Tmux-Tutorial/
# -- https://tmuxguide.readthedocs.io/en/latest/tmux/tmux.html
# -- https://superuser.com/questions/395158/tmux-copy-mode-select-text-block
# -- https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf
# -- https://unix.stackexchange.com/questions/24274/attach-to-different-windows-in-session
# -- https://man7.org/linux/man-pages/man1/tmux.1.html
# -- https://arcolinux.com/everything-you-need-to-know-about-tmux-status-bar/
# -- https://dev.to/waylonwalker/series/13642
# -- https://www.reddit.com/r/tmux/comments/1hdoa0m/slightly_color_difference_in_tmux/
# -- https://github.com/gpakosz/.tmux/issues/490
# -- https://stackoverflow.com/questions/39327292/how-to-set-the-color-of-tmux-copy-modes-highlight
# -- https://stackoverflow.com/questions/23755063/alert-in-tmux-when-a-process-completes
# -- https://www.reddit.com/r/tmux/comments/1l14pdy/easy_tpm_plugin_bootstrapping_for_portability/

# ============================================================================
# TMUX general settings
# ============================================================================
# TMUX show all key-binding
# -- In TMUX, bind + ?

# Set prefix [Ctrl]+[a], [Ctrl]+[b] (default: [Ctrl]+[b])
set -g prefix C-a
set -g prefix2 C-b

# Window settings
set -g base-index 1
set -g renumber-windows on

# Allow window to be renamed by TMUX but not by pane process
set -g automatic-rename off
set -g allow-rename on

# Window option
setw -g pane-base-index 1
setw -g aggressive-resize on

# Window status monitoring: (status: activity/bell/silence, options: on/off)
setw -g monitor-activity off
setw -g monitor-bell off

# Alert by ringing bell (off), sending visual-message (on), or both (both)
set -g visual-activity off # when monitor-activity is on, triggered by activity-action
set -g visual-bell off # when monitor-bell is on, triggered by bell-action

# Master pane size
set -g main-pane-height "50%"
set -g main-pane-width "50%"

# Do not close TMUX after closing current session
set -g detach-on-destroy off

# Copy mode keybindings (options: vi/emacs, default: emacs)
# -- https://superuser.com/questions/196060/selecting-text-in-tmux-copy-mode
set -g mode-keys vi

# Statusline keybindings (options: vi/emacs, default: emacs)
# -- https://superuser.com/questions/196060/selecting-text-in-tmux-copy-mode
set -g status-keys vi

# Terminal color settings (enable true colors)
set -g default-terminal "${TERM}"
set -ag terminal-overrides ",*:RGB"

# Miscellaneous TMUX settings
set -g default-shell "${SHELL}"
set -g display-time 3000
set -g display-panes-time 3000
set -g escape-time 0
set -g repeat-time 450
set -g history-limit 30000
set -g focus-events on
set -g extended-keys on
set -g mouse off

# ============================================================================
# TMUX buffer and copymode
# ============================================================================

# TMUX default buffer option
# -- <prefix> + [#]: List all paste buffer
# -- <prefix> + [=]: Open buffer list
# -- <prefix> + [[]: Enter TMUX copy mode
# -- <prefix> + []]: Paste buffer

# Clipboard is set to "on" for gnome-terminal, but MUST be set to "external"
# for kitty or other terminal emulator supports set-clipboard
# -- https://github.com/tmux/tmux/wiki/Clipboard
set -g set-clipboard external

# Set Copy/Paste Mode
bind [ copy-mode
bind ] paste-buffer
bind = choose-buffer

# Set Copy/Paste Mode (VIM-like key binding in copy-mode-vi)
# -- https://superuser.com/questions/395158/tmux-copy-mode-select-text-block
# -- https://unix.stackexchange.com/questions/131011/use-system-clipboard-in-vi-copy-mode-in-tmux

# -- TMUX version < 2.5
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'C-v' rectangle-toggle
#bind-key -t vi-copy 'y' copy-selection

# -- TMUX version >= 2.5
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel
#bind -T copy-mode-vi y send -X copy-pipe-and-canel "xsel --input --clipboard"
#bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel \
#    "xsel --inputi --follow --primary | xsel --input --clipboard"

# Quick enter copy mode for screen scrolling
#bind \; copy-mode
#bind -T copy-mode-vi \; send -X cancel
bind -T copy-mode-vi C-[ send -X cancel

# ============================================================================
# TMUX session/pane/window option
# ============================================================================
# Session/pane/window option including move, swap, and etc.

# TMUX default pane option
# -- <prefix> + [;]: Move to last active pane
# -- <prefix> + [%]: Split window horizontally [|]
# -- <prefix> + ["]: Split window vertically [-]
# -- <prefix> + [!]: Break pane to new window
# -- <prefix> + [x]: Kill current pane
# -- <prefix> + [{]: Swap current pane with pane index+1
# -- <prefix> + [}]: Swap current pane with pane index-1
# -- <prefix> + [Ctrl] + [o]: Rotate panes clockwisely (DISABLED)
# -- <prefix> + [Alt] + [o]: Rotate panes anti-clockwisely (DISABLED)

# TMUX default window option
# -- <prefix> + [']: Prompt for window index to select
# -- <prefix> + [&]: Kill current window
# -- <prefix> + [,]: Rename current window

# TMUX default session option
# -- <prefix> + [(]: Switch to previous client (session)
# -- <prefix> + [)]: Switch to next client (session)
# -- <prefix> + [$]: Rename current session
# -- <prefix> + [Ctrl] + [z]: Suspend current session

# Sessionist (TMUX plugin) default option
# -- <prefix> + [@]: Break current pane to new session
# -- <prefix> + [Bspace]: Switch to last session

# Move pane to different session
# -- <prefix> :move-pane -t session_name:(window_id)

# Move window to different session
# -- TMUX version >= 3.1
#    -- <prefix> + [.]: session_name:(unused_window_id)
# -- TMUX all version
#    -- <prefix> + :move-window -t session_name:(unused_window_id)

# NOTE: Share session between users
# -- https://micropyramid.medium.com/tmux-sharing-terminal-between-users-84f2e311c64f
# tmux -S /tmp/socket                   # Create new TMUX socket
# chmod 777 /tmp/socket                 # Set permission open for every users
# tmux -S /tmp/socket attach -t SESSION # Users now can attach to shared session SESSION

# NOTE: Create/Attach group session
# -- Group will be auto-removed once every session in it is killed
# -- https://unix.stackexchange.com/questions/24274/attach-to-different-windows-in-session
# tmux new-session -t SESSION # Create new session in group session SESSION (will create one if it is not existed)

# Merge session with another one (e.g. move all windows to another session)
bind M-t command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Switch to last pane
bind -r ` last-pane
bind -r \; last-pane

# Switch to last window
bind -r \~ last-window
bind -r \^ last-window
bind -r Bspace last-window

# Switch to last session
bind -r M-Bspace switch-client -l

# Create/Kill window
bind C new-window -c "#{pane_current_path}"
bind X confirm-before -p "kill window #W? (y/n)" "kill-window"
bind C-S-x confirm-before -p "kill all other windows? (y/n)" "kill-window -a"

# Split window
unbind \%; bind \% split-window -h -c "#{pane_current_path}"
unbind \"; bind \" split-window -v -c "#{pane_current_path}"

# Split full window
bind | split-window -fh -c "#{pane_current_path}"
bind _ split-window -fv -c "#{pane_current_path}"

# Select pane with pane number display [Not work in TMUX version < 2.0]
bind q display-panes -d 0
#bind \' display-panes -d 0

# Select window with index
bind Q list-windows -F '(#I) #W'\; command-prompt -p window: "send-keys Escape; select-window -t ':%%'"
#unbind \"; bind \" list-windows -F '(#I) #W'\; command-prompt -p window: "send-keys Escape; select-window -t ':%%'"

## Select/Rotate pane
## -- Default select next pane
##    -- <prefix> + [o]
#unbind n; bind -r n select-pane -t :.+
#unbind p; bind -r p select-pane -t :.-

## Rotate panes in current window
## -- Default rotate panes clockwisely/anti-clockwisely
##    -- <prefix> + [Ctrl/Alt] + [o]
#bind -r N rotate-window
#bind -r P rotate-window -D

# Vimium-like key for session switch
bind -r j switch-client -n
bind -r k switch-client -p

# Vimium-like key for window select
bind -r l select-window -t +1
bind -r h select-window -t -1

# Vim-like key for pane/window swap (focus stays)
bind -r J swap-pane -t +1\; select-pane
bind -r K swap-pane -t -1\; select-pane
bind -r L swap-window -t +1\; select-window -t +1
bind -r H swap-window -t -1\; select-window -t -1

# Vim-like key for pane resize (No need to press prefix key constantly)
bind -r M-j resize-pane -D 1
bind -r M-k resize-pane -U 1
bind -r M-l resize-pane -R 1
bind -r M-h resize-pane -L 1

# Manipulate mark pane (mark: <prefix> + [m])
bind -r M-\; swap-pane
bind -r M-| join-pane -h
bind -r M-_ join-pane -v
bind -r M-\% join-pane -h
bind -r M-\" join-pane -v

# Scratchpad (popup-window, TMUX version >= 3.2 required)
bind g display-popup -w 85% -h 85% -E "tmux new-session -A -s scratch"
bind Enter display-popup -w 85% -h 85% -d "#{pane_current_path}"

# ============================================================================
# TMUX miscellaneous
# ============================================================================
# NOTE: Update $DISPLAY in TMUX session
#
# (1) For bash shell, add following function to ~/.bashrc
#
## Update TMUX display (e.g. localhost:XX -> localhost:XX)
#function tmux_update_display {
#    export LAST_DISPLAY=$DISPLAY
#    export DISPLAY=$(tmux show-env | sed -n 's/^DISPLAY=//p')
#    echo "UPDATE_TMUX_DISPLAY: $LAST_DISPLAY (OLD) -> $DISPLAY (NEW)"
#}
#
# (2) For fish shell, add following function to ~/.config/fish/config.fish
#
## Update TMUX display (e.g. localhost:XX -> localhost:XX)
#function tmux_update_display
#    set LAST_DISPLAY $DISPLAY
#    set DISPLAY (tmux show-env | sed -n 's/^DISPLAY=//p')
#    echo "UPDATE_TMUX_DISPLAY: $LAST_DISPLAY (OLD) -> $DISPLAY (NEW)"
#end
#
# NOTE: Hang running process onto TMUX session w/ reptyr
# -- References
#    -- https://blog.nelhage.com/2011/02/changing-ctty/
#    -- https://forum.openeuler.org/t/topic/383
#    -- https://github.com/nelhage/reptyr/issues/62
# (1) Preparation
#    -- Install reptyr on Fedora: sudo dnf install  reptyr
#    -- To make reptyr work: echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope
# (2) Steps
#    1. In original terminal (the one that has process running)
#       1. Press [Ctrl] + [z] to send process to background
#       2. Use jobs -l | cut -f2 | xclip -i to get process PID and copy to clipboard
#       3. Run disown <PID> to disown process
#    2. In target terminal, use reptyr <PID> to restore process in target terminal
#    3. In original terminal, close the shell where process was running on

# Disable scrollback clearing
set -g alternate-screen off

# Setup load change of .tmux.conf
bind R source-file ~/.tmux.conf \; display-message "source-file ~/.tmux.conf"

# Remap clock mode from t to T
bind T clock-mode

# Command below generates default TMUX configuration
# tmux -f /dev/null -L temp start-server \; list-keys > ~/.tmux.reset.conf

# Toggle mouse mode
bind M set mouse \; display-message "set mouse"

# Toggle pane input synchronization
bind C-s setw synchronize-panes

# Toggle activity monitoring
# -- [Alt] + [n/p]: move to next/prev window  with a bell or activity marker
bind N set monitor-activity \; display-message "set monitor-activity"

# Shell shortcut need to be remapped by prefix+...
# -- Prefix
#    -- [Ctrl] + [a/b]
# -- In vim-tmux-navigator
#    -- [Ctrl] + [h/j/k/l]: Move in pane
bind -r C-b send-keys 'C-b'
bind -r C-h send-keys 'C-h'
bind -r C-j send-keys 'C-j'
bind C-k send-keys 'C-k'
bind C-a send-keys 'C-a'

# Clear current pane output but keep scrollback history
bind a send-keys 'C-l'
bind C-l send-keys 'C-l'
# Clear current pane output and scrollback history
bind C-S-l confirm-before -p "clear scrollback history? (y/n)" "clear-history \; display-message 'scrollback history cleared'"

# Let Home/End work in TMUX
bind -n Home send Escape "OH"
bind -n End send Escape "OF"

# Customization mode (added in tmux 3.2a, defaults: <prefix> + [C])
bind M-C customize-mode -Z

# ============================================================================
# TMUX statusline / titlebar
# ============================================================================

# Toggle TMUX statusline/borderline
bind b set pane-border-status
bind B set status
bind C-g set status

# Toggle TMUX statusline position top/bottom
bind M-b set status-position top
bind M-B set status-position bottom

# Statusline (Powerline support all-in-one)
# -- Installation: dnf install powerline tmux-powerline
#source ~/Desktop/Vim_Tmux_Config/tmux/powerline.conf

# General statusline setting
set -g status on
set -g status-interval 1
set -g status-justify centre
set -g status-keys vi
set -g status-position bottom
set -g status-style '#{?pane_in_mode,bg=colour3,#{?synchronize-panes,bg=colour1,bg=colour2}},'
set -ag status-style '#{?pane_in_mode,fg=colour3,#{?synchronize-panes,fg=colour3,fg=colour2}}'

# Command line
set -g message-command-style bg=colour3,fg=colour0,bold

# Message line
set -g message-style bg=colour3,fg=colour0,bold

# Left statusline
set -g status-left-length 40
set -g status-left-style default
set -g status-left '#{prefix_highlight}#[bg=colour4,fg=colour15,bold] #S '

# Central window statusline
setw -g window-status-separator ' '
setw -g window-status-style fg=colour15
setw -g window-status-format '#I:#W#{?window_flags,#{window_flags},}'
setw -g window-status-last-style fg=colour15,bold
setw -g window-status-current-style fg=colour15,bold
setw -g window-status-current-format '[#I:#W#{?window_flags,#{window_flags},}]'

# Right statusline
set -g status-right-length 40
set -g status-right-style default
set -g status-right '#[bg=colour4,fg=colour15,bold] #S #{prefix_highlight}'

# Pane boarder statusline (TMUX version >= 2.3 required)
# NOTE: TMUX does not detect neovim CWD change, which is solved in neovim 0.10
# -- https://github.com/neovim/neovim/issues/21771
set -g pane-border-status off # options: top/bottom/off
set -g pane-border-style '#{?synchronize-panes,fg=colour1,fg=colour15}'
set -g pane-active-border-style '#{?pane_in_mode,fg=colour3,#{?synchronize-panes,fg=colour1,fg=colour2}}',bold
set -g pane-border-lines heavy # options: single/double/heavy/simple/number
set -gq pane-border-indicators colour # options: off/colour/arrows/both
set -g pane-border-format ' #{pane_index} '
set -ag pane-border-format '#{pane_current_command} '
set -ag pane-border-format '#{pane_current_path} '

# Copy mode (includes: buffer, search, etc)
set -g mode-style bg=colour3,fg=colour0,bold

# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '[TMUX] #H/#S/#I:#W [TMUX]'

# ============================================================================
# TMUX plugins
# ============================================================================

# Bootstrap TPM and install plugins automatically if TPM not present
if "test ! -d ~/.tmux/plugins/tpm" \
  "run-shell 'tmux display-message \"📦 Downloading tmux plugins...\"; \
              git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && \
              ~/.tmux/plugins/tpm/bin/install_plugins && \
              tmux display-message \"✅ Plugins installed.\"'"

# TMUX plugin manager (Must be the first line)
# TPM (TMUX plugin manager, TMUX version >= 1.9 required)
# (1) Install plugin
#     -- In TMUX, <prefix> + [Shift] + [i]
# (2) Upgrade plugin
#     -- In TMUX, <prefix> + [Shift] + [u]
# (3) Uninstall plugin
#     -- In TMUX, <prefix> + [Alt] + [u]
set -g @plugin 'tmux-plugins/tpm'

# TMUX prefix highlight
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_empty_prompt ' #H '
set -g @prefix_highlight_empty_attr 'bg=colour0,fg=colour15,bold'
set -g @prefix_highlight_prefix_prompt '#H'
set -g @prefix_highlight_bg 'colour15'
set -g @prefix_highlight_fg 'colour0,bold'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_prompt 'CopyMode'
set -g @prefix_highlight_copy_mode_attr 'bg=colour3,fg=colour15,bold'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_prompt 'SyncPanes'
set -g @prefix_highlight_sync_mode_attr 'bg=colour1,fg=colour15,bold'

# TMUX pop
set -g @plugin 'roosta/tmux-pop'
set -g @tmux-pop-color 'brightblack'

# TMUX sidebar (file-tree)
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @sidebar-tree-command 'tree -C -L 4'
set -g @sidebar-tree-focus 'F3'
set -g @sidebar-tree 'S-F3'
set -g @sidebar-tree-position 'left'
set -g @sidebar-tree-width '40'

# TMUX resurrect previous session
# Caution: This will resurrect ALL saved session (stored in ~/.tmux/resurrect/last)
# -- https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_programs.md
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-save 'M-s'
set -g @resurrect-restore 'M-r'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes ':all:'

# TMUX continuum (supported by resurrect)
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# TMUX-VIM shared pane navigator
# -- [Ctrl] + [vim-key]: Select pane
set -g @plugin 'christoomey/vim-tmux-navigator'

## TMUX statusline auto-hiding
#set -g @plugin 'thesast/tmux-transient-status'
#set -g @transient-status-delay '0.05'
#set -g @transient-status-stall '0.45'   # enable statusline auto-hiding
##set -g @transient-status-stall '99999' # disable statusline auto-hiding

# TMUX copycat (better regex search support, already built in TMUX 3.x)
# -- <prefix> + [TMUX_COPYCAT_COMMAND]: Search pattern in copy-mode
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @copycat_digit_search 'M-d' # d for [d]igit
set -g @copycat_file_search 'M-f'  # f for [f]ile
set -g @copycat_git_special 'M-g'  # g for [g]it (files for git status)
set -g @copycat_hash_search 'M-v'  # v for [v]alue (hash value for git log)
set -g @copycat_ip_search 'M-i'    # i for [i]p
set -g @copycat_url_search 'M-w'   # w for [w]ebsite

# TMUX-SYSTEM shared clipboard
# You might need package like xsel or xclip for clipboard synchronization
# -- <prefix> + [y]: Copy current line
# -- <prefix> + [Y]: Copy current PWD
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'

# TMUX open file/url with default editor/browser
# --- <prefix> + [o]: In copy mode, open selected text with editor
# --- <prefix> + [O]: In copy mode, open selected text with xdg-open
set -g @plugin 'tmux-plugins/tmux-open'
set -g @open-editor 'o'
set -g @open 'O'

# TMUX logging and screen capture
# -- <prefix> + [Alt] + [p]: PrtSc current pane
# -- <prefix> + [Alt] + [P]: PrtSc all panes of the current session
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @logging_key 'M-L'
set -g @screen-capture-key 'M-S'
set -g @save-complete-history-key 'M-H'
set -g @clean-history-key ''

# TMUX session manager
# -- <prefix> + [t] + <secondary>: join-pane
# -- Available <secondary>:
#    -- [h/-/"]: join horizontally
#    -- [v/|/%]: join vertically
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @sessionist-goto "M-\q"
set -g @sessionist-alternate 'M-`'
set -g @sessionist-join-pane 't'
set -g @sessionist-new 'M-c'
set -g @sessionist-promote-pane '@'
set -g @sessionist-kill-session 'M-x'

# Initialize TMUX plugin manager (keep this line at the end of plugins)
run '~/.tmux/plugins/tpm/tpm'

# ============================================================================
# Overwrite TMUX plugins bindkey
# ============================================================================
# Disable some non-used plugins bindkeys

# Open choose-tree with all windows in all sessions
unbind Tab; bind Tab choose-tree -wZ
# Open choose-tree with all panes in all sessions
bind BTab choose-tree -Z

# Open choose-tree with all sessions sorted by name
unbind s; bind s choose-tree -sZ -O name
